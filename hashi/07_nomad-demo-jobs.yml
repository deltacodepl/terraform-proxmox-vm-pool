---
- name: "HashiCorp - Nomad - Jobs : Demo Jobs."
  hosts: all
  become: true

  vars_files:
    - vars/general/main.yml
    - vars/hashicorp/general.yml
    - vars/hashicorp/nomad.yml
    - vars/hashicorp/demo.yml
    - vars/hashicorp/ssl.yml

  tasks:
    - name: "HashiCorp - Nomad - Jobs : Retrieve Operator Secret ID."
      ansible.builtin.shell: "awk '/Secret ID/ {print $4}' {{ nomad_operator_token_local_path }}"
      changed_when: false
      become: false
      delegate_to: localhost
      run_once: true
      register: nomad_operator_token

    - name: "HashiCorp - Nomad - Jobs : Register the Node ID from the first client for constraints demo."
      ansible.builtin.shell: "{{ nomad_binary }} node status -self -short | grep ID -m1 | awk '{print $3}'"
      environment:
        NOMAD_TOKEN: "{{ nomad_operator_token.stdout }}"
      changed_when: false
      register: nomad_first_client_node_id
      delegate_to: "{{ groups['clients'] | first }}"
      run_once: true

    - name: "HashiCorp - Nomad - Jobs : Ensure FQDN in first server."
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: "{{ hostvars[item].ansible_host }} {{ demo_fqdn }}"
        line: "{{ hostvars[item].ansible_host }} {{ demo_fqdn }}"
      delegate_to: "{{ groups['servers'] | first }}"
      with_items: "{{ groups.clients | first }}"
      run_once: true
      tags: demo-fqdn

    - name: "HashiCorp - Nomad - Jobs : Deployment."
      block:
        - name: "HashiCorp - Nomad - Jobs : Ensure job directory is present on the first server."
          become: true
          ansible.builtin.file:
            path: "{{ nomad_demo_job_remote_location }}"
            state: directory
            recurse: true

        - name: "HashiCorp - Nomad - Jobs : Ensure job directory is present on this client."
          become: true
          ansible.builtin.file:
            path: "{{ nomad_demo_job_local_location }}"
            state: directory
            mode: "0777"
          delegate_to: localhost

        - name: "HashiCorp - Nomad - Jobs : Ensure demo jobs are templated and in place."
          ansible.builtin.template:
            src: "{{ item.template }}"
            dest: "{{ item.destination }}"
            mode: "0666"
          with_items: "{{ nomad_demo_job_names }}"
          when: nomad_first_client_node_id is defined

        - name: "HashiCorp - Nomad : Retrieve job content."
          ansible.builtin.fetch:
            src: "{{ item.destination }}"
            dest: "{{ nomad_demo_job_local_location }}/"
            flat: yes
          with_items: "{{ nomad_demo_job_names }}"

        - name: "HashiCorp - Nomad : Ensure demo jobs are running."
          community.general.nomad_job:
            host: localhost
            use_ssl: false
            state: present
            token: "{{ nomad_operator_token.stdout }}"
            content: "{{ lookup('file', item.destination) }}"
            timeout: 60
            force_start: true
          with_items: "{{ nomad_demo_job_names }}"
      when:
        - ansible_hostname in groups['servers']
      delegate_to: "{{ groups['servers'] | first }}"
      run_once: true
